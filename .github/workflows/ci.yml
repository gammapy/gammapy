name: CI
on: [push, pull_request]

jobs:
  lint:
    name: Black check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: psf/black@stable
        with:
          version: "22.6.0"
  ci-runs:
    name: ${{ matrix.os }}, ${{ matrix.tox_env }}
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.allowed_fail }}
    env:
      PYTEST_ADDOPTS: --color=yes -n auto --dist=loadscope
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps'
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.10'
            tox_env: 'py310-test-alldeps-cov'
            gammapy_data_path: /home/runner/work/gammapy/gammapy/gammapy-datasets/dev
            allowed_fail: false
          - os: macos-latest
            python: '3.10'
            tox_env: 'py310-test'
            gammapy_data_path: /Users/runner/work/gammapy/gammapy/gammapy-datasets/dev
            allowed_fail: false
          - os: windows-latest
            python: '3.10'
            tox_env: 'py310-test-alldeps'
            gammapy_data_path:  D:\a\gammapy\gammapy\gammapy-datasets\dev
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.10'
            tox_env: 'py310-test'
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.10'
            tox_env: 'codestyle'
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'py39-test-alldeps-astropylts-numpy121'
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'oldestdeps'
            allowed_fail: false
          - os: ubuntu-latest
            python: '3.9'
            tox_env: 'devdeps'
            allowed_fail: true
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: download datasets
        if: ${{ matrix.gammapy_data_path }}
        run: |
          python -m pip install tqdm requests
          python -m pip install -e .
          gammapy download datasets
      - name: Print Python, pip, setuptools, and tox versions
        run: |
          python -c "import sys; print(f'Python {sys.version}')"
          python -c "import pip; print(f'pip {pip.__version__}')"
          python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
          python -c "import tox; print(f'tox {tox.__version__}')"
      - name: Run tests
        if: ${{ !matrix.gammapy_data_path }}
        run: tox -e ${{ matrix.tox_env }} -- -n auto
      - name: Run tests with data
        if: ${{ matrix.gammapy_data_path }}
        env:
          GAMMAPY_DATA: ${{ matrix.gammapy_data_path}}
        run: tox -e ${{ matrix.tox_env }} -- -n auto
      - name: Upload coverage to codecov
        if: "contains(matrix.tox_env, '-cov')"
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          verbose: true
  sphinx:
    name: Linux python 3.9 sphinx all-deps
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      PYTEST_ADDOPTS: --color=yes -n auto --dist=loadscope
      GAMMAPY_DATA: /home/runner/work/gammapy/gammapy/gammapy-datasets/dev
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install base dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox
      - name: download datasets
        run: |
          python -m pip install tqdm requests
          python -m pip install -e .
          gammapy download datasets
      - name: test build docs
        run: |
          tox -e build_docs -- -j auto
      - name: check links
        continue-on-error: true
        run: |
          tox -e linkcheck -- -j auto  
  conda-build:
    name: Linux python 3.9 conda-build all-deps
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - name: checkout repo
        uses: actions/checkout@v3
      - name: create and activate env
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
      - name: install gammapy
        run: |
          pip install -e .
      - name: test conda build
        run: |
          make clean
          conda install conda-build
          conda info
          conda --version
          conda build --version
          python setup.py bdist_conda
