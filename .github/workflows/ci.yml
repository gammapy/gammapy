name: CI
on: [push, pull_request]

jobs:
  basic:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    env:
      PYTEST_ADDOPTS: --color=yes
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false # true
      matrix:
        include:
          - name: Linux python 3.6.2 core
            os: ubuntu-latest
          - name: Linux python 3.7 all
            os: ubuntu-latest
          - name: Linux python 3.8 core
            os: ubuntu-latest
          - name: Windows python 3.7 all
            os: windows-latest
            python: 3.7
          - name: Mac python 3.7 all
            os: macos-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: install python3.6
        if: contains(matrix.name, '3.6')
        run: |
          sed -i 's/python==3.7/python==3.6.2/' environment-dev.yml
      - name: install python3.8
        if: contains(matrix.name, '3.8')
        run: |
          sed -i 's/python==3.7/python==3.8/' environment-dev.yml
      - name: add core dependencies env file
        if: contains(matrix.name, 'core')
        run: |
          awk '{f="env" NR; print $0> f}' RS='# extra dependencies' environment-dev.yml
          mv env1 environment-dev.yml
          cat environment-dev.yml
      - name: install dependencies with pip
        if: matrix.name=='Windows python 3.7 all'
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install astropy click cython numpy pydantic pyyaml regions scipy
          pip install pytest pytest-astropy requests tqdm
      - name: create and activate env
        if: matrix.name!='Windows python 3.7 all'
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: gammapy-dev
          environment-file: environment-dev.yml
      - name: install gammapy
        run: |
          pip install -e .
      - name: test coverage
        if: matrix.name=='Linux python 3.7 all'
        run: |
          gammapy download datasets
          export GAMMAPY_DATA=/home/runner/work/gammapy/gammapy/gammapy-datasets
          make test-cov
          codecov -X gcov
      - name: test simple
        if: matrix.name!='Linux python 3.7 all'
        run: |
          make test
  notebooks:
    name: Linux python 3.7 notebooks all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      PYTEST_ADDOPTS: --color=yes
      GAMMAPY_DATA: /home/runner/work/gammapy/gammapy/gammapy-datasets
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: create and activate env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: gammapy-dev
          environment-file: environment-dev.yml
          auto-update-conda: true
      - name: install gammapy
        run: |
          pip install -e .
      - name: download datasets
        run: |
          gammapy download datasets
      - name: test notebooks
        run: |
          make test-nb
  others:
    name: Linux python 3.7 others all
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    env:
      PYTEST_ADDOPTS: --color=yes
      GAMMAPY_DATA: /home/runner/work/gammapy/gammapy/gammapy-datasets
    steps:
      - name: checkout repo
        uses: actions/checkout@v2
      - name: create and activate env
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: gammapy-dev
          environment-file: environment-dev.yml
          auto-update-conda: true
      - name: install gammapy
        run: |
          pip install -e .
      - name: download datasets
        run: |
          gammapy download datasets
      - name: test build docs
        run: |
          make docs-sphinx
      - name: test code in docs and docstrings
        run: |
          pytest --doctest-glob="*.rst" docs/
          pytest --doctest-modules --ignore-glob=*/tests gammapy
      - name: test without datasets
        run: |
          unset GAMMAPY_DATA
          make test
#      - name: test astropy dev
#        if: always()
#        run: |
#          conda remove astropy --force -y
#          pip install git+https://github.com/astropy/astropy.git#egg=astropy
#          make test
      - name: test conda build
        if: always()
        run: |
          make clean
          conda install conda-build
          conda info
          conda --version
          conda build --version
          python setup.py bdist_conda
