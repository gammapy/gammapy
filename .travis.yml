# Run travis-ci tests in Docker containers:
# http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/
sudo: false

language: python

python:
    - 2.7
    - 3.3
    - 3.4
    # This is just for "egg_info".  All other builds are explicitly given in the matrix

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - NUMPY_VERSION=1.9
        # TODO: at the moment we don't support Astropy 0.4 ... put stable here again once 1.0 is out!
        - ASTROPY_VERSION=development
        #- ASTROPY_VERSION=stable
        - CONDA_INSTALL='conda install -c astropy-ci-extras --yes'
        - PIP_INSTALL='pip install'
    matrix:
        - SETUP_CMD='egg_info'

matrix:
    include:
        # Do a coverage test in Python 2. This requires the latest
        # development version of Astropy, which fixes some issues with
        # coverage testing in affiliated packages.
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - python: 2.7
          env: SETUP_CMD='build_sphinx -w'

        # Try Astropy development version
        - python: 2.7
          env: ASTROPY_VERSION=development SETUP_CMD='test'
        - python: 3.3
          env: ASTROPY_VERSION=development SETUP_CMD='test'

        # Try all python versions with the latest numpy
        - python: 2.7
          env: SETUP_CMD='test'
        - python: 3.3
          env: SETUP_CMD='test'
        - python: 3.4
          env: SETUP_CMD='test'

        # Try older numpy versions
        - python: 2.7
          env: NUMPY_VERSION=1.8 SETUP_CMD='test'
        # Temporarily disabling failing builds on travis-ci
        # TODO: re-enable
        # https://travis-ci.org/gammapy/gammapy/builds/44074440
        #- python: 2.7
        #  env: NUMPY_VERSION=1.7 SETUP_CMD='test'
        #- python: 2.7
        #  env: NUMPY_VERSION=1.6 SETUP_CMD='test'

before_install:
    # Use utf8 encoding. Should be default, but this is insurance against
    # future changes
    - export PYTHONIOENCODING=UTF8
    - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
    - chmod +x miniconda.sh
    - ./miniconda.sh -b
    - export PATH=/home/travis/miniconda/bin:$PATH
    - conda update --yes conda

    # UPDATE APT-GET LISTINGS
    - apt-get update

    # DOCUMENTATION DEPENDENCIES
    - if [[ $SETUP_CMD == build_sphinx* ]]; then apt-get install graphviz texlive-latex-extra dvipng; fi

install:
    # Certificate checking is not working with Python 2.7.9 (due to PEP 476)
    # This is a temp workaround ... see https://github.com/astropy/photutils/issues/202
    - if [[ $TRAVIS_PYTHON_VERSION == 2.7 ]]; then export TRAVIS_PYTHON_VERSION=2.7.8; fi

    # CONDA
    - conda create --yes -n test -c astropy-ci-extras python=$TRAVIS_PYTHON_VERSION
    - source activate test

    # TODO: remove when issue #202 workaround is removed (see line above)
    - export CONDA_INSTALL="conda install -c astropy-ci-extras --yes python=$TRAVIS_PYTHON_VERSION numpy=$NUMPY_VERSION"

    # CORE DEPENDENCIES
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION pytest pip Cython jinja2; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL pytest-xdist; fi

    # ASTROPY
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == development ]]; then $PIP_INSTALL git+http://github.com/astropy/astropy.git#egg=astropy; fi
    - if [[ $SETUP_CMD != egg_info ]] && [[ $ASTROPY_VERSION == stable ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION astropy; fi

    # OPTIONAL DEPENDENCIES
    # Here you can add any dependencies your package may have. You can use
    # conda for packages available through conda, or pip for any other
    # packages. You should leave the `numpy=$NUMPY_VERSION` in the `conda`
    # install since this ensures Numpy does not get automatically upgraded.
    - if [[ $SETUP_CMD != egg_info ]]; then $CONDA_INSTALL scipy scikit-image pandas; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL uncertainties; fi
    - if [[ $SETUP_CMD != egg_info ]]; then $PIP_INSTALL git+http://github.com/astrofrog/reproject.git#egg=reproject; fi

    # DOCUMENTATION DEPENDENCIES
    # build_sphinx needs sphinx and matplotlib (for plot_directive). Note that
    # this matplotlib will *not* work with py 3.x, but our sphinx build is
    # currently 2.7, so that's fine
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $CONDA_INSTALL numpy=$NUMPY_VERSION Sphinx matplotlib scipy; fi
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $PIP_INSTALL linkchecker; fi
    - if [[ $SETUP_CMD == build_sphinx* ]]; then $PIP_INSTALL aplpy; fi

    # COVERAGE DEPENDENCIES
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then $PIP_INSTALL coverage coveralls; fi

script:
    - python setup.py $SETUP_CMD
    - if [[ $SETUP_CMD == build_sphinx* ]]; then linkchecker docs/_build/html; fi

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == 'test --coverage' ]]; then coveralls --rcfile='gammapy/tests/coveragerc'; fi
