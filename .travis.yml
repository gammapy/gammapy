#
# This travis-ci build matrix config is a modified copy of the one from Astropy
#


# We can't use `language: python` here because it's not supported on Mac.
# But that's OK ... the language here is irrelevant because we use conda
# to install our own Python.
language: c

os:
    - linux

# This is a signal to travis-ci to use the new build infrastructure
sudo: false

addons:
  apt:
    packages: &default_apt
      - graphviz
      - texlive-latex-extra
      - dvipng
      - gfortran

env:
    global:
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable

        - CONDA_DEPENDENCIES='Cython>=0.27 click scipy healpy h5py matplotlib pyyaml uncertainties scikit-image scikit-learn pandas naima photutils sherpa libgfortran regions reproject pandoc ipython'
        - CONDA_DEPENDENCIES_OSX='Cython>=0.27 click scipy healpy h5py matplotlib pyyaml uncertainties scikit-image scikit-learn pandas naima photutils sherpa regions reproject pandoc ipython'
        - CONDA_DEPENDENCIES_WO_SHERPA='Cython>=0.27 click scipy healpy h5py matplotlib pyyaml uncertainties scikit-image scikit-learn pandas naima photutils regions reproject pandoc ipython'
        - CONDA_DOCS_DEPENDENCIES='Cython>=0.27 click scipy healpy h5py matplotlib pyyaml uncertainties scikit-image scikit-learn pandas naima photutils pygments aplpy sherpa libgfortran regions reproject pandoc ipython'
        - CONDA_DEPENDENCIES_NOTEBOOKS='Cython>=0.27 click scipy healpy h5py matplotlib pyyaml uncertainties scikit-image scikit-learn pandas naima photutils aplpy sherpa libgfortran runipy regions reproject pandoc ipython'

        - PIP_DEPENDENCIES='nbsphinx==0.2.17 sphinx-click'

        - CONDA_CHANNELS='conda-forge sherpa'

        - FETCH_GAMMAPY_EXTRA=true
        - FETCH_GAMMA_CAT=true
        - PACKAGING_TEST=false

        - MAIN_CMD='python setup.py'

        - ASTROPY_USE_SYSTEM_PYTEST=1

    matrix:
        - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'
        - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
        - PYTHON_VERSION=2.7 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # MacOS X tests
#        - os: osx
#          env: PYTHON_VERSION=2.7 SETUP_CMD='test'
#               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_OSX

        - os: osx
          env: PYTHON_VERSION=3.5 SETUP_CMD='test'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_OSX

        # The main build that's used for coverage measurement
        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='test -V --coverage'

        # Run tests without optional dependencies
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test -V'
               CONDA_DEPENDENCIES='Cython click regions'
               PIP_DEPENDENCIES=''

        # Run tests without GAMMAPY_EXTRA available
        - os: linux
          env: FETCH_GAMMAPY_EXTRA=false PYTHON_VERSION=3.6 SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES

        # Build docs
#        - os: linux
#          env: PYTHON_VERSION=2.7 SETUP_CMD='build_docs -w'
#               CONDA_DEPENDENCIES=$CONDA_DOCS_DEPENDENCIES
        - os: linux
          env: PYTHON_VERSION=3.6 SETUP_CMD='build_docs -w'
               CONDA_DEPENDENCIES=$CONDA_DOCS_DEPENDENCIES

        # Test conda build (which runs a bunch of useful tests after building the package)
        # See https://conda.io/docs/bdist_conda.html
        - os: linux
          env: PYTHON_VERSION=3.6 MAIN_CMD='make' SETUP_CMD='conda'
               PACKAGING_TEST=true

        # Older Python versions
        - os: linux
          env: PYTHON_VERSION=3.5 SETUP_CMD='test -V'

#        - os: linux
#          env: PYTHON_VERSION=2.7 SETUP_CMD='test -V'


        # Test with Astropy dev and LTS versions
        - os: linux
          env: PYTHON_VERSION=3.5 ASTROPY_VERSION=lts SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES

        - os: linux
          env: PYTHON_VERSION=3.5 ASTROPY_VERSION=dev SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES

        # Temporarily disabled because of this issue:
        # https://travis-ci.org/gammapy/gammapy/jobs/115820975
        # https://github.com/gammapy/gammapy/pull/483
        # Test the dev version of Sherpa, this may take a longer time
        #- os: linux
        #  env: PYTHON_VERSION=2.7 SETUP_CMD='test -V'
        #       CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_WO_SHERPA DEBUG=True
        #       PIP_DEPENDENCIES='uncertainties git+http://github.com/sherpa/sherpa.git#egg=sherpa'


        # Test with other numpy versions
        - os: linux
          env: PYTHON_VERSION=3.6 NUMPY_VERSION=dev SETUP_CMD='test -V'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_WO_SHERPA
#        - os: linux
#          env: PYTHON_VERSION=2.7 NUMPY_VERSION=prerelease SETUP_CMD='test -V'
        - os: linux
          env: PYTHON_VERSION=3.6 NUMPY_VERSION=1.10 SETUP_CMD='test -V'

        # Test Jupyter notebooks
        - os: linux
          env: PYTHON_VERSION=3.5 MAIN_CMD='make' SETUP_CMD='test-notebooks'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_NOTEBOOKS

#        - os: linux
#          env: PYTHON_VERSION=2.7 MAIN_CMD='make' SETUP_CMD='test-notebooks'
#               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_NOTEBOOKS

    # You can move builds that temporarily fail because of some non-Gammapy here.
    # Please add a link to a GH issue that tracks the upstream issue.
    # copy the part from the `include` section above here.
    allow_failures:
        - os: linux
          env: PYTHON_VERSION=3.5 MAIN_CMD='make' SETUP_CMD='test-notebooks'
               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_NOTEBOOKS

#        - os: linux
#          env: PYTHON_VERSION=2.7 MAIN_CMD='make' SETUP_CMD='test-notebooks'
#               CONDA_DEPENDENCIES=$CONDA_DEPENDENCIES_NOTEBOOKS


install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh

    - if $FETCH_GAMMAPY_EXTRA; then
          git clone https://github.com/gammapy/gammapy-extra.git $HOME/gammapy-extra;
          export GAMMAPY_EXTRA=${HOME}/gammapy-extra;
      fi

    - if $FETCH_GAMMA_CAT; then
          git clone https://github.com/gammapy/gamma-cat.git $HOME/gamma-cat;
          export GAMMA_CAT=${HOME}/gamma-cat;
      fi

    # From https://conda.io/docs/bdist_conda.html
    # bdist_conda must be installed into a root conda environment,
    # as it imports conda and conda_build. It is included as part of the conda build package.
    - if $PACKAGING_TEST; then
          conda install -n root conda-build astropy Cython click regions;
          conda info;
          conda --version;
          conda build --version;
          source activate root;
      fi

    # This is needed to make matplotlib plot testing work
    - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then
          export DISPLAY=:99.0;
          sh -e /etc/init.d/xvfb start;
          export QT_API=pyqt;
      fi

    - which cython
    - cython --version

script:
    - $MAIN_CMD $SETUP_CMD


after_success:
    - if [[ $SETUP_CMD == 'test -V --coverage' ]]; then
          coveralls --rcfile='gammapy/tests/coveragerc';
      fi
