[metadata]
name = gammapy
description = A Python package for gamma-ray astronomy
author = The Gammapy developers
author_email = gammapy-coordination-l@in2p3.fr
license = BSD 3-Clause
license_files = LICENSE.rst
url = https://gammapy.org
url_docs = https://docs.gammapy.org/dev/
long_description = file: LONG_DESCRIPTION.rst
long_description_content_type = text/x-rst
edit_on_github = False
github_project = gammapy/gammapy
url_raw_github = https://raw.githubusercontent.com/gammapy/gammapy/master/
platforms = any
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy


[options]
zip_safe = False
packages = find:
python_requires = >=3.9
setup_requires = setuptools_scm
install_requires =
    numpy>=1.21
    scipy>=1.5,!=1.10
    astropy>=5.0
    regions>=0.5.0
    pyyaml>=5.3
    click>=7.0
    pydantic>=2.5.0
    iminuit>=2.8.0
    matplotlib>=3.4

[options.entry_points]
console_scripts =
    gammapy = gammapy.scripts.main:cli

[options.extras_require]
all =
    naima
    sherpa; platform_system != "Windows"
    healpy; platform_system != "Windows"
    requests
    tqdm
    ipywidgets
    ray[default]>=2.9
all_no_ray =
    naima
    sherpa; platform_system != "Windows"
    healpy; platform_system != "Windows"
    requests
    tqdm
    ipywidgets
cov =
    naima
    sherpa; platform_system != "Windows"
    healpy; platform_system != "Windows"
    requests
    tqdm
    ipywidgets
test =
    pytest-astropy
    pytest-xdist
    pytest
    docutils
    sphinx
docs =
    astropy>=5.0,<5.3
    numpy<2.0
    sphinx-astropy
    sphinx
    sphinx-click
    sphinx-gallery
    sphinx-design
    sphinx-copybutton
    pydata-sphinx-theme
    nbformat
    docutils

[options.package_data]
gammapy.analysis = config/*
gammapy.irf.psf.tests = data/*
gammapy.modeling.models.tests = data/*
gammapy.catalog.tests = data/*

[bdist_wheel]
universal = true

[tool:pytest]
minversion = 3.0
norecursedirs = build dev examples docs/_build docs/_static gammapy/extern catalog/tests/data
addopts = -p no:warnings --remote-data=any
remote_data_strict = True
astropy_header = true
text_file_format = rst

[coverage:run]
omit =
    *tests*
    gammapy/extern/*
    gammapy/conftest.py
    # Exclude some code that's only executed by the
    # notebook tests or docs build (not users)
    # from the coverage measurement
    gammapy/scripts/jupyter.py
    gammapy/utils/notebooks_links.py
    gammapy/utils/notebooks_process.py
    gammapy/utils/notebooks_test.py
    gammapy/utils/docs.py
    gammapy/_astropy_init*
    gammapy/conftest.py
    gammapy/*setup_package*
    gammapy/tests/*
    gammapy/*/tests/*
    gammapy/extern/*
    gammapy/version*
    */gammapy/_astropy_init*
    */gammapy/conftest.py
    */gammapy/*setup_package*
    */gammapy/tests/*
    */gammapy/*/tests/*
    */gammapy/extern/*
     */gammapy/version*

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


[tool:isort]
profile = "black"
sections = STDLIB,PYTEST,NUMPY,ASTROPY,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
no_lines_before = STDLIB,PYTEST,NUMPY,ASTROPY,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_pytest = pytest
known_numpy = numpy,scipy
known_astropy = astropy,regions
known_first_party = gammapy
# Config to make isort compatible with black
# From https://black.readthedocs.io/en/stable/the_black_code_style.html
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88

[codespell]
skip = ./.git
ignore-words = dev/codespell/ignore-words.txt
exclude-file = dev/codespell/exclude-file.txt

[flake8]
# https://flake8.pycqa.org/en/latest/user/error-codes.html
# W503: line break before binary operator
ignore = W503,E501
exclude = extern,conftest.py,__init__.py
extend-ignore = E203
