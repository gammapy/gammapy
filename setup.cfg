[metadata]
name = gammapy
description = A Python package for gamma-ray astronomy
long-description = file: LONG_DESCRIPTION.rst
long-description-content-type = text/x-rst
author = The Gammapy developers
author_email = gammapy@googlegroups.com
license = BSD
url = https://github.com/gammapy/gammapy
github_project = gammapy/gammapy
url_docs = https://docs.gammapy.org/dev/
url_raw_github = https://raw.githubusercontent.com/gammapy/gammapy/master/
platforms = any
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Development Status :: 3 - Alpha

[options]
zip_safe = False
packages = find:
python_requires = >=3.6
install_requires =
    numpy>=1.17
    astropy>=4.0
    scipy>=1.2
    regions>=0.4
    pyyaml>=5.1
    click>=7.0
    pydantic>=1.0

[options.entry_points]
console_scripts =
    gammapy = gammapy.scripts.main:cli

[options.package_data]
gammapy.analysis = config/*
gammapy.irf.tests = data/*
gammapy.modeling.tests = data/*
gammapy.catalog.tests = data/*

[bdist_wheel]
universal = true

[build_docs]
source-dir = docs
downloadable-notebooks = _static/notebooks
build-dir = docs/_build
;all_files = 0

[tool:pytest]
minversion = 3.0
norecursedirs = build dev examples docs/_build docs/_static gammapy/extern catalog/tests/data
addopts = -p no:warnings --remote-data=any
remote_data_strict = True

[coverage:run]
source = gammapy
omit =
   *tests*
   gammapy/extern/*
   gammapy/conftest.py
   # Exclude some code that's only executed by the
   # notebook tests or docs build (not users)
   # from the coverage measurement
   gammapy/scripts/jupyter.py
   gammapy/utils/notebooks_links.py
   gammapy/utils/notebooks_process.py
   gammapy/utils/notebooks_test.py
   gammapy/utils/docs.py

[coverage:report]
exclude_lines =
   # Have to re-enable the standard pragma
   pragma: no cover
   # Don't complain about packages we have installed
   except ImportError
   # Don't complain if tests don't hit assertions
   raise AssertionError
   raise NotImplementedError
   # Don't complain about script hooks
   def main\(.*\):

[tool:isort]
sections = STDLIB,PYTEST,NUMPY,ASTROPY,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
no_lines_before = STDLIB,PYTEST,NUMPY,ASTROPY,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
known_pytest = pytest
known_numpy = numpy,scipy
known_astropy = astropy,regions
known_first_party = gammapy
# Config to make isort compatible with black
# From https://black.readthedocs.io/en/stable/the_black_code_style.html
multi_line_output=3
include_trailing_comma=True
force_grid_wrap=0
use_parentheses=True
line_length=88
